package cryptix.module.exploit;

import cryptix.Client;
import cryptix.gui.clickgui.Setting;
import cryptix.module.Category;
import cryptix.module.Module;
import cryptix.utils.Utils;
import net.minecraft.entity.player.EntityPlayer;

public class AntiCheat extends Module{
	private Setting noslowCheck = new Setting("NoSlow Check", this, false);
	private Setting autoblockCheck = new Setting("AutoBlock Check", this, false);
	public AntiCheat() {
		super("AntiCheat", 0, Category.EXPLOIT);
		Client.instance.settingsManager.addSettings(noslowCheck, autoblockCheck);
	}
	
	@Override
	public void onPreMotion() {
		for(EntityPlayer retard : mc.theWorld.playerEntities) {
			if(!retard.isDead && retard != mc.thePlayer) {
				updateVals(retard);
				if(noslowCheck.getBoolean() && checkPlayer(retard, 0)) {
					Utils.sendClientChatMessage(retard.getName() + " Flagged " + "NoSlow");
				}
				if(autoblockCheck.getBoolean() && checkPlayer(retard, 1)) {
					Utils.sendClientChatMessage(retard.getName() + " Flagged " + "AutoBlock");
				}
			}
		}
	}
	
	private boolean checkPlayer(EntityPlayer e, int check) {
		switch(check) {
			case 0: //NoSlow
				if(e.noslowTick > 10) {
					return true;
				}
				break;
			case 1: //Autoblock
				if(e.autoblockTick > 20) {
					return true;
				}
				break;
		}
		return false;
	}
	
	private void updateVals(EntityPlayer retard) {
		if(retard.isSwingInProgress && retard.isBlocking()) {
			retard.autoblockTick++;
		}else{
			retard.autoblockTick = 0;
		}
		if(retard.isUsingItem() && (retard.isSprinting() || Math.max(Math.abs(retard.posX - retard.lastTickPosX), Math.abs(retard.posZ - retard.lastTickPosZ)) >= 0.8)) {
			retard.noslowTick++;
		}else {
			retard.noslowTick = 0;
		}
	}

}
